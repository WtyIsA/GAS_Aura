---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by wutianyi.
--- DateTime: 2025/2/18 17:42
---
---@class EventUtils
EventUtils = {}
EventUtils._listeners = HashMap:new()

EventUtils.ShowUICallback = "ShowUICallback"
EventUtils.HideUICallback = "HideUICallback"


EventUtils.HitActorEvent = "HitActorEvent";
EventUtils.HitRiderEvent = "HitRiderEvent";
EventUtils.HitPlantEvent = "HitPlantEvent";
EventUtils.CancelHitPlantEvent = "CancelHitPlantEvent";
EventUtils.HitBuildingEvent = "HitBuildingEvent";
EventUtils.HitPlayerEvent = "HitPlayerEvent";
EventUtils.HitFarPlayerEvent = "HitFarPlayerEvent";
EventUtils.HitCarEvent = "HitCarEvent";
EventUtils.HitTrashEvent = "HitTrashEvent";
EventUtils.HitAirDropEvent = "HitAirDropEvent";
EventUtils.HitStrongholdEvent = "HitStrongholdEvent";
EventUtils.CancelHitStrongholdEvent = "CancelHitStrongholdEvent";
EventUtils.HitSystemDoorEvent = "HitSystemDoorEvent";
EventUtils.CancelHitSystemDoorEvent = "CancelHitSystemDoorEvent";
EventUtils.CancelHitAirDropEvent = "CancelHitAirDropEvent";
EventUtils.CancelHitActorEvent = "CancelHitActorEvent";
EventUtils.CancelHitRiderEvent = "CancelHitRiderEvent";
EventUtils.CancelHitBuildingEvent = "CancelHitBuildingEvent";
EventUtils.CancelHitPlayerEvent = "CancelHitPlayerEvent";
EventUtils.CancelHitFarPlayerEvent = "CancelHitFarPlayerEvent";
EventUtils.CancelHitCarEvent = "CancelHitCarEvent";
EventUtils.CancelHitTrashEvent = "CancelHitTrashEvent";
EventUtils.GetOnCarEvent = "GetOnCarEvent";
EventUtils.GetOutCarEvent = "GetOutCarEvent";
EventUtils.RefreshBuildState = "RefreshBuildState";
EventUtils.AddMiniMapMark= "AddMiniMapMark";
EventUtils.SubMiniMapMark= "SubMiniMapMark";
EventUtils.ClickBuildBtn = "ClickBuildBtn";
EventUtils.ShowBuild = "ShowBuild";
EventUtils.HideBuild = "HideBuild";
EventUtils.ClickShortcut = "ClickShortcut";
EventUtils.PressEButton = "PressEButton";
EventUtils.RadiaMenuShow = "RadiaMenuShow"
EventUtils.RadiaMenuHide = "RadiaMenuHide"
EventUtils.OnHpChange = "OnHpChange"
EventUtils.OnbSecondHpChange = "OnbSecondHpChange"
EventUtils.OnHungerChange = "OnHungerChange"
EventUtils.OnThirstyChange = "OnThirstyChange"
EventUtils.OnStrengthChange = "OnStrengthChange"
EventUtils.OnOxygenChange = "OnOxygenChange"
EventUtils.OnLocalFireSuccess = "OnLocalFireSuccess"
EventUtils.OnEnterHoldItemState = "OnEnterHoldItemState"
EventUtils.OnExitHoldItemState = "OnExitHoldItemState"
EventUtils.OnClickHoldItem = "OnClickHoldItem"
EventUtils.OnCancelHoldItem = "OnCancelHoldItem"
EventUtils.OnClickDrinkWater = "OnClickDrinkWater"
EventUtils.OnClickTackWater = "OnClickTackWater"
EventUtils.OnClickSwitchWeapon = "OnClickSwitchWeapon"
EventUtils.AbleSwimming = "AbleSwimming"
EventUtils.UnableSwimming = "UnableSwimming"
EventUtils.GetOnRiderFinish = "GetOnRiderFinish"
EventUtils.GetOffRiderFinish = "GetOffRiderFinish"
EventUtils.InWater = "InWater"
EventUtils.OutWater = "OutWater"
EventUtils.OnClickGetOnRider = "OnClickGetOnRider"
EventUtils.OnRepCurHoldItem = "OnRepCurHoldItem"
EventUtils.OnDownAttackBtn = "OnDownAttackBtn";
EventUtils.OnUpAttackBtn = "OnUpAttackBtn";
EventUtils.OnDownThrowWeaponBtn =  "OnDownThrowWeaponBtn";
EventUtils.OnUpThrowWeaponBtn = "OnUpThrowWeaponBtn";
EventUtils.OnExitBuildState = "OnExitBuildState";
EventUtils.OnEnterBuildState = "OnEnterBuildState";
EventUtils.OnEnterBuildStateFailed = "OnEnterBuildStateFailed";
EventUtils.OnReadyThrow = "OnReadyThrow";
EventUtils.OnRiderHpChange = "OnRiderHpChange"
EventUtils.OnRiderHungerChange = "OnRiderHungerChange"
EventUtils.OnRiderStrengthChange = "OnRiderStrengthChange"
EventUtils.OnShowTurnTable = "OnShowTurnTable";
EventUtils.OnHideTurnTable = "OnHideTurnTable";
EventUtils.OnVehicleRoleSwitchSeat = "OnVehicleRoleSwitchSeat";
EventUtils.OnVehicleHpChange = "OnVehicleHpChange";
EventUtils.OnClickRadialLevelZero = "OnClickRadialLevelZero";
EventUtils.OnStartCrouch ="OnStartCrouch"
EventUtils.OnStopCrouch ="OnStopCrouch"
EventUtils.OnStartReloadBullet = "OnStartReloadBullet";
EventUtils.OnStopReloadBullet = "OnStopReloadBullet";
EventUtils.OnStartAim = "OnStartAim";
EventUtils.OnStopAim = "OnStopAim";
EventUtils.OnCanSavePeople = "OnCanSavePeople";
EventUtils.OnCantSavePeople = "OnCantSavePeople";
EventUtils.OnStartSavePeople = "OnStartSavePeople";
EventUtils.OnStopSavePeople = "OnStopSavePeople";
EventUtils.OnSetCurGun = "OnSetCurGun";
EventUtils.OnWantChangeCurGun = "OnWantChangeCurGun";
EventUtils.OnTreeHpChange = "OnTreeHpChange";
EventUtils.OnUpWaterSurface ="OnUpWaterSurface";
EventUtils.OnDownWaterSurface ="OnDownWaterSurface";
EventUtils.OnClickHighThrow = "OnClickHighThrow";
EventUtils.OnClickLowThrow = "OnClickLowThrow";
EventUtils.OnInterruptThrow = "OnInterruptThrow";
EventUtils.OnClickBackTo = "OnClickBackTo";
EventUtils.OnBackToFinish = "OnBackToFinish";
EventUtils.OnStartBackTo = "OnStartBackTo";
---@type fun(self:table,actor:AActor,id:number)
EventUtils.OnPlaySound = "OnPlaySound";
EventUtils.OnStopSound = "OnStopSound";
EventUtils.OnMapObjHpChange = "OnMapObjHpChange"
EventUtils.OnClickUseItem = "OnClickUseItem";
EventUtils.OnEnterSwim = "OnEnterSwim";
EventUtils.onExitSwim = "onExitSwim";
EventUtils.PressedDownSwim= "PressedDownSwim";
EventUtils.PressedUpSwim= "PressedUpSwim";
EventUtils.DrinkWaterFromBottle = "DrinkWaterFromBottle";
EventUtils.DrinkWaterFromRiver = "DrinkWaterFromRiver";
EventUtils.TakeWaterFromRiver = "TakeWaterFromRiver";
EventUtils.TakeWaterFromDrew = "TakeWaterFromDrew";
EventUtils.DrinkWaterFromDrew = "DrinkWaterFromDrew";
EventUtils.StartWaterDrew = "StartWaterDrew"
EventUtils.OnStartBuildObject = "OnStartBuildObject"
EventUtils.OnHitActor = "OnHitActor"
EventUtils.OnHidePreviewBuild = "OnHidePreviewBuild"
EventUtils.ShowVehicle = "ShowVehicle";
EventUtils.HideVehicle = "HideVehicle";
EventUtils.ShowPlant = "ShowPlant";
EventUtils.HidePlant = "HidePlant";
EventUtils.ChatReadPrivate = "ChatReadPrivate";
EventUtils.OnShowBossBloodPanel = "OnShowBossBloodPanel"
EventUtils.OnHideBossBloodPanel = "OnHideBossBloodPanel"
EventUtils.OnBossBloodChange = "OnBossBloodChange"
EventUtils.OnAddGunPart = "OnAddGunPart"
EventUtils.OnRemoveGunPart = "OnRemoveGunPart"
EventUtils.PickFailed = "PickFailed"
EventUtils.CloseBsMenuPanel = "CloseBsMenuPanel"
EventUtils.WantThrowGrenade = "WantThrowGrenade"        --fun(time):void
EventUtils.ThrowGrenadeFinish = "ThrowGrenadeFinish"    --fun():void
EventUtils.CancelThrowGrenade = "CancelThrowGrenade"    --fun():void
EventUtils.ShowThrowCD = "ShowThrowCD";
EventUtils.BaseCenterEnter = "BaseCenterEnter";
EventUtils.BaseCenterExit = "BaseCenterExit";
EventUtils.CancelTeleport = "CancelTeleport";
EventUtils.OnTreeDown = "OnTreeDown";                   ---fun(arg:TreeInfo):void
EventUtils.OnShowBattleProcessBar = "OnShowBattleProcessBar";
EventUtils.OnBuildActionChange = "OnBuildActionChange";
EventUtils.HitChestEvent = "HitChestEvent"
EventUtils.CancelHitChestEvent = "CancelHitChestEvent"
EventUtils.HitClueEvent = "HitClueEvent"
EventUtils.CancelHitClueEvent = "CancelHitClueEvent"
EventUtils.HitSwitchEvent = "HitSwitchEvent"
EventUtils.CancelHitSwitchEvent = "CancelHitSwitchEvent"
EventUtils.RefreshSwitchState = "RefreshSwitchState"
EventUtils.SelfOnVehicleStateChange = "SelfOnVehicleStateChange"
EventUtils.CallBattlePanelRefreshBtn = "CallBattlePanelRefreshBtn"
EventUtils.OnDisConnectDS = "OnDisConnectDS"
EventUtils.BuildMenuClick = "BuildMenuClick"
EventUtils.OnTinderNearbyKey = "OnTinderNearbyKey"
EventUtils.OnNearHaveLadder = "OnNearHaveLadder"
EventUtils.OnGetOnLadder = "OnGetOnLadder"
EventUtils.SelfStartMove = "SelfStartMove"
EventUtils.SelfStopMove = "SelfStopMove"
EventUtils.HitJuGuanMenKaiGuan = "HitJuGuanMenKaiGuan"
EventUtils.CancelHitJuGuanMenKaiGuan = "CancelHitJuGuanMenKaiGuan"
EventUtils.HaveVelocity = "HaveVelocity"
EventUtils.NotHaveVelocity = "NotHaveVelocity"
EventUtils.HitLandMine = "HitLandMine"
EventUtils.CancelHitHitLandMine = "CancelHitHitLandMine"
EventUtils.StartFocoBow = "StartFocoBow"
EventUtils.StopFocoBow = "StopFocoBow"
EventUtils.BaseWeaponThrowWallChange = "BaseWeaponThrowWallChange"
EventUtils.OnJoinVoiceRoom = "OnJoinVoiceRoom"
EventUtils.OnGetVoiceRoomSpeakers = "OnGetVoiceRoomSpeakers"
EventUtils.GuidePosDistanceChange = "GuidePosDistanceChange"
EventUtils.SelfElectricDamage = "SelfElectricDamage"
EventUtils.HitDustItem = "HitDustItem"
EventUtils.CancelHitDustItem = "CancelHitDustItem"
EventUtils.OnBossHasBorn = "OnBossHasBorn"
EventUtils.OnMonsterAlert = "OnMonsterAlert"
EventUtils.OnBaseLevelUp = "OnBaseLevelUp"
EventUtils.HitMonsterBox = "HitMonsterBox"
EventUtils.CancelHitMonsterBox = "CancelHitMonsterBox"
EventUtils.BuildDestroyOrBreak = "BuildDestroyOrBreak"
EventUtils.HitCardDoorEvent = "HitCardDoorEvent";
EventUtils.CancelHitCardDoorEvent = "CancelHitCardDoorEvent";
EventUtils.ShipyardTurretOpen = "ShipyardTurretOpen";
EventUtils.EnterDangerAreaEvent = "EnterDangerAreaEvent";
EventUtils.LeaveDangerAreaEvent = "LeaveDangerAreaEvent";
EventUtils.HideTurretOpenTime = "HideTurretOpenTime";
EventUtils.XunMaButtonPressed = "XunMaButtonPressed";
EventUtils.XunMaButtonReleased = "XunMaButtonReleased";
EventUtils.XunMaFinishWithResult = "XunMaFinishWithResult"; --fun(result : boolean) void
EventUtils.LeaveUseItemState = "LeaveUseItemState"
EventUtils.EnterUseItemState = "EnterUseItemState"
EventUtils.OnSelfPlayerAutoRun = "OnSelfPlayerAutoRun"
EventUtils.OnBossMonsterBirth = "OnBossMonsterBirth"
EventUtils.OnVehicleDisappear = "OnVehicleDisappear"
EventUtils.OnVehicleBroken = "OnVehicleBroken"
EventUtils.HitNote = "HitNote"
EventUtils.CancelHitNote = "CancelHitNote"
EventUtils.OnExitPainting = "OnExitPainting"
EventUtils.CameraWaterState = "CameraWaterState"
EventUtils.HandAttackStart = "HandAttackStart"

-------------------------------------project03 new

EventUtils.HitDoorEvent = "HitDoorEvent"
EventUtils.CancelHitDoorEvent = "CancelHitDoorEvent"
EventUtils.ShowInteractProcessBar = "ShowInteractProcessBar"
EventUtils.HideInteractProcessBar = "HideInteractProcessBar"
EventUtils.AddOperateBtn = "AddOperateBtn"
EventUtils.RemoveOperateBtn = "RemoveOperateBtn"
EventUtils.HitTorchEvent = "HitDoorEvent"
EventUtils.CancelHitTorchEvent = "CancelHitDoorEvent"
EventUtils.HitGroundItemEvent = "HitGroundItemEvent"
EventUtils.CancelHitGroundItemEvent = "CancelHitGroundItemEvent"
EventUtils.HitTreasureBoxEvent = "HitTreasureBoxEvent"
EventUtils.CancelHitTreasureBoxEvent = "CancelHitTreasureBoxEvent"
EventUtils.HitMonsterEvent = "HitMonsterEvent";
EventUtils.CancelHitMonsterEvent = "CancelHitMonsterEvent";
EventUtils.UpdatePoisonCircle = "EventUtils.UpdatePoisonCircle"
EventUtils.OnSelfRoleIdRep = "EventUtils.OnSelfRoleIdRep"
EventUtils.OnRepPlayerController = "EventUtils.OnRepPlayerController"
EventUtils.OnDownSkill1Btn = "EventUtils.OnDownSkill1Btn"
EventUtils.OnDownSkill2Btn = "EventUtils.OnDownSkill2Btn"
EventUtils.OnUpSkill1Btn = "EventUtils.OnUpSkill1Btn"
EventUtils.OnUpSkill2Btn = "EventUtils.OnUpSkill2Btn"
EventUtils.SelfAttributeInit = "EventUtils.SelfAttributeInit "
EventUtils.HideBattlePanelOperateBtn = "EventUtils.HideBattlePanelOperateBtn "
EventUtils.HitWarpGateEvent = "EventUtils.HitWarpGateEvent";
EventUtils.CancelHitWarpGateEvent = "EventUtils.CancelHitWarpGateEvent";
EventUtils.OnSelfGetHurt = "EventUtils.OnSelfGetHurt"
EventUtils.OnSwitchThrow = "EventUtils.OnSwitchThrow"
EventUtils.CrossHairChange = "EventUtils.CrossHairChange"
EventUtils.OnAbilityCancel = "EventUtils.OnAbilityCancel"
EventUtils.ShowCancelBtn = "EventUtils.ShowCancelBtn"
EventUtils.HideCancelBtn = "EventUtils.HideCancelBtn"
EventUtils.ShowUseMedicineBar = "EventUtils.ShowUseMedicineBar"
EventUtils.HideUseMedicineBar = "EventUtils.HideUseMedicineBar"
EventUtils.CrossHairAngleChange = "EventUtils.CrossHairAngleChange"
EventUtils.BowCrossAnim = "EventUtils.BowCrossAnim"
EventUtils.HitAltarEvent = "EventUtils.HitAltarEvent";
EventUtils.CancelHitAltarEvent = "EventUtils.CancelHitAltarEvent";
EventUtils.OnBuffAdded = "EventUtils.OnBuffAdded"
EventUtils.OnBuffRemove = "EventUtils.OnBuffRemove"
EventUtils.OnBuffUpdate = "EventUtils.OnBuffUpdate"
EventUtils.OnGEAdded = "EventUtils.OnGEAdded"
EventUtils.OnGERemoved = "EventUtils.OnGERemoved"
EventUtils.OnEnterBattleState = "EventUtils.OnEnterBattleState"
EventUtils.OnExitBattleState = "EventUtils.OnExitBattleState"
EventUtils.PreDamage = "EventUtils.PreDamage"
EventUtils.PostDamage = "EventUtils.PostDamage"
EventUtils.OnDownShield = "EventUtils.OnDownShield"
EventUtils.OnUpShield = "EventUtils.OnUpShield"
EventUtils.OnPlayerAttributeChange = "EventUtils.OnPlayerAttributeChange"
EventUtils.AbilityActive = "EventUtils.AbilityActive"
EventUtils.AttackHited = "EventUtils.AttackHited"
EventUtils.EquipItem = "EventUtils.EquipItem"
EventUtils.UnEquipItem = "EventUtils.UnEquipItem"
EventUtils.InteractiveStateChange = "EventUtils.InteractiveStateChange"
EventUtils.CharacterClickF = "EventUtils.CharacterClickF"
EventUtils.HitDoorOrganEvent = "EventUtils.HitDoorOrganEvent";
EventUtils.CancelHitDoorOrganEvent = "EventUtils.CancelHitDoorOrganEvent";
EventUtils.HitOliveTrapEvent = "EventUtils.HitOliveTrapEvent";
EventUtils.CancelHitOliveTrapEvent = "EventUtils.CancelHitOliveTrapEvent";
EventUtils.PlayerCurMatchChange = "EventUtils.PlayerCurMatchChange"
EventUtils.StartSing = "EventUtils.StartSing"
EventUtils.EndSing = "EventUtils.EndSing"
EventUtils.MouseMoveYaw = "EventUtils.MouseMoveYaw"
EventUtils.MouseMovePitch = "EventUtils.MouseMovePitch"
EventUtils.CloseRoulette = "EventUtils.CloseRoulette"
EventUtils.SelfRevive = "EventUtils.SelfRevive"
EventUtils.WeaponOnHandChange = "EventUtils.WeaponOnHandChange"
EventUtils.HitOreEvent = "EventUtils.HitOreEvent";
EventUtils.CancelHitOreEvent = "EventUtils.CancelHitOreEvent";
EventUtils.LobbyWaitChange = "EventUtils.LobbyWaitChange"
EventUtils.LobbyWaitPlayNumChange = "EventUtils.LobbyWaitPlayNumChange"
EventUtils.AbilityFailKey = "EventUtils.AbilityFailKey"
EventUtils.SelfBulletNumChange = "EventUtils.SelfBulletNumChange"
EventUtils.SelectItemTipsItem = "EventUtils.SelectItemTipsItem"
EventUtils.HitTreasurePileEvent = "HitTreasurePileEvent"
EventUtils.CancelHitTreasurePileEvent = "CancelHitTreasurePileEvent"
EventUtils.CommonLoadingFinish = "CommonLoadingFinish"
EventUtils.MaxWalkSpeedChange = "EventUtils.MaxWalkSpeedChange"
EventUtils.LoadingHide = "EventUtils.LoadingHide"
EventUtils.Setting_OnKeyPressed = "EventUtils.Setting_OnKeyPressed"
EventUtils.WatchPlayer = "EventUtils.WatchPlayer"
EventUtils.EnterPlayerEvent = "EventUtils.EnterPlayerEvent"
EventUtils.ExitPlayerEvent = "EventUtils.ExitPlayerEvent"
EventUtils.OnSelfDead = "EventUtils.OnSelfDead"
EventUtils.OnSettingChangeShortKey = "EventUtils.OnSettingChangeShortKey"
EventUtils.PlayerThrowWeaponChange = "EventUtils.PlayerThrowWeaponChange"
EventUtils.PlayerQuickUseChange = "EventUtils.PlayerQuickUseChange"
EventUtils.OnForbidLogin = "EventUtils.OnForbidLogin"
EventUtils.OnGCAttachEffectToOwner = "EventUtils.OnGCAttachEffectToOwner"

function EventUtils.Clear()
    if EventUtils._listeners then
        EventUtils._listeners:clear()
    end
end

function EventUtils.AddEventListener(key, func, param)
    ---@type ArrayList
    local listeners = EventUtils._listeners:get(key)

    if listeners == nil then
        listeners = ArrayList:new()
        EventUtils._listeners:add(key, listeners)
    end

    local size = listeners:size()
    for i = 1, size do
        if (listeners:get(i).f == func) and listeners:get(i).p == param  then
            return ;
        end
    end
    listeners:add({ f = func, p = param })
end

function EventUtils.RemoveEventListener(key, func, param)
    ---@type ArrayList
    local listeners = EventUtils._listeners:get(key)
    if nil == listeners then
        return
    end
    local size = listeners:size()
    for i = size,1,-1 do
        if (listeners:get(i).f == func) then
            if (param and listeners:get(i).p == param) or (not param) then
                listeners:removeAt(i);
                if (listeners:size() == 0) then
                    EventUtils._listeners:remove(key);
                end
            end
        end
    end
end

function EventUtils.RemoveEventByObj(obj)
    for k,listeners in pairs(EventUtils._listeners) do
        local size = listeners:size()
        for i = size,1,-1 do
            if (listeners:get(i).p == obj) then
                listeners:removeAt(i);
                if (listeners:size() == 0) then
                    EventUtils._listeners:remove(k);
                end
            end
        end
    end
end


---@private
function EventUtils.ProcessEvent(v, ...)
    if(v.p)then
        v.f(v.p, ...)
    else
        v.f(EventUtils, ...)
    end
end

---@private
function EventUtils.PrintTraceback()
    print(debug.traceback())
end

function EventUtils.TriggerEvent(key, ...)
    if not EventUtils._listeners:contains(key) then
        return
    end
    ---@type ArrayList
    local listeners = EventUtils._listeners:get(key)
    local arg = { ... }
    local size = listeners:size()
    for i = 1, size do
        local v = listeners:get(i);
        if v.f then
            xpcall(EventUtils.ProcessEvent , EventUtils.PrintTraceback,v,...)
        else
            Utils.LogWarning("EventUtils.TriggerEvent","Bind Null Func:%s",key)
        end
    end
end

return EventUtils;